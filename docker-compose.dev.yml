services:
  vault-module:
    build:
      context: ./vault
      dockerfile: dockerfile.dev
    container_name: vault-module
    ports:
      - "5433:8200"
      - "5434:8201"
    cap_add:
      - IPC_LOCK
    networks:
      - internal_network

  vault-seeder:
    build:
      context: ./vault/seeder
      dockerfile: seeder.dev.dockerfile
    depends_on:
      - vault-module
    network_mode: "service:vault-module"
    env_file:
      - env/.dev.env

  frontend:
    build:
      context: ../frontend
      dockerfile: dockerfile.dev
    environment:
      - VITE_HOST=0.0.0.0
      - VITE_PORT=5173
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "5173:5173"
    volumes:
      - ../frontend:/app:delegated
      - /app/node_modules
    networks:
      - internal_network
    env_file:
      - env/.dev.env

  db-service:
    build:
      context: ../services/db-service
      dockerfile: dockerfile.dev
    container_name: db-service
    ports:
      - "5432:3000"
    volumes:
      - ../services/db-service:/app
    environment:
      NODE_ENV: development
    working_dir: /app
    networks:
      - internal_network
    env_file:
      - env/.dev.env

  auth-service:
    build:
      context: ../services/auth-service
      dockerfile: dockerfile.dev
    container_name: auth-service
    ports:
      - "4001:3000"
    volumes:
      - ../services/auth-service:/app
    environment:
      NODE_ENV: development
    working_dir: /app
    networks:
      - internal_network
    env_file:
      - env/.dev.env

  chat-service:
    build:
      context: ../services/chat-service
      dockerfile: dockerfile.dev
    container_name: chat-service
    ports:
      - "4002:3000"
    volumes:
      - ../services/chat-service:/app
    environment:
      NODE_ENV: development
    working_dir: /app
    networks:
      - internal_network
    env_file:
      - env/.dev.env

  gateway-service:
    build:
      context: ../services/gateway-service
      dockerfile: dockerfile.dev
    container_name: gateway-service
    ports:
      - "4003:3000"
    volumes:
      - ../services/gateway-service:/app
    environment:
      NODE_ENV: development
    working_dir: /app
    networks:
      - internal_network
    env_file:
      - env/.dev.env

  lobby-service:
    build:
      context: ../services/lobby-service
      dockerfile: dockerfile.dev
    container_name: lobby-service
    ports:
      - "4004:3000"
    volumes:
      - ../services/lobby-service:/app
    environment:
      NODE_ENV: development
    working_dir: /app
    networks:
      - internal_network
    env_file:
      - env/.dev.env

  matchmaking-service:
    build:
      context: ../services/matchmaking-service
      dockerfile: dockerfile.dev
    container_name: matchmaking-service
    ports:
      - "4005:3000"
    volumes:
      - ../services/matchmaking-service:/app
    environment:
      NODE_ENV: development
    working_dir: /app
    networks:
      - internal_network
    env_file:
      - env/.dev.env

  notification-service:
    build:
      context: ../services/notification-service
      dockerfile: dockerfile.dev
    container_name: notification-service
    ports:
      - "4006:3000"
    volumes:
      - ../services/notification-service:/app
    environment:
      NODE_ENV: development
    working_dir: /app
    networks:
      - internal_network
    env_file:
      - env/.dev.env

  tournament-service:
    build:
      context: ../services/tournament-service
      dockerfile: dockerfile.dev
    container_name: tournament-service
    ports:
      - "4007:3000"
    volumes:
      - ../services/tournament-service:/app
    environment:
      NODE_ENV: development
    working_dir: /app
    networks:
      - internal_network
    env_file:
      - env/.dev.env

  user-service:
    build:
      context: ../services/user-service
      dockerfile: dockerfile.dev
    container_name: user-service
    ports:
      - "4008:3000"
    volumes:
      - ../services/user-service:/app
    environment:
      NODE_ENV: development
    working_dir: /app
    networks:
      - internal_network
    env_file:
      - env/.dev.env

  media-service:
    build:
      context: ../services/media-service
      dockerfile: dockerfile.dev
    container_name: media-service
    ports:
      - "4009:3000"
    volumes:
      - ../services/media-service:/app
    environment:
      NODE_ENV: development
    working_dir: /app
    networks:
      - internal_network
    env_file:
      - env/.dev.env

  prometheus-module:
    image: prom/prometheus:latest
    container_name: prometheus-module
    ports:
      - "9090:9090"
    networks:
      - internal_network
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro

  grafana-module:
    build:
      context: ./grafana
      dockerfile: dockerfile.dev
    container_name: grafana-module
    ports:
      - "9000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus-module
    networks:
      - internal_network
    env_file:
      - env/.dev.env

volumes:
  vault-data:
  grafana-data:


networks:
  internal_network:
    driver: bridge
