worker_processes 1;
events { worker_connections 1024; }

http {
    # 1) Map incoming Host to an “upstream” name
    map $host $upstream {
        default                     frontend;
        vault.*                     vault;
        grafana.*                   grafana;
        prometheus.*                prometheus;
    }

    # 2) Define each backend by its container name and port
    upstream vault       { server vault-module:8200; }
    upstream grafana     { server grafana-module:3000; }
    upstream prometheus  { server prometheus-module:9090; }
    upstream gateway     { server gateway-service:3000; }
    upstream frontend    { server frontend:80; }

    server {
        listen       80;
        server_name  transcendance.charles-poulain.ovh
                     *.transcendance.charles-poulain.ovh;

        # 3) Redirect vault root → /ui/
        if ($host ~ ^vault\.) {
            rewrite ^/$ /ui/ redirect;
        }

		location /api/ {
            proxy_pass          http://gateway$request_uri;
            proxy_set_header    Host               $host;
            proxy_set_header    X-Real-IP          $remote_addr;
            proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
        }

        # 4) Vault UI and assets (speaks HTTPS to Vault)
        location /ui/ {
            proxy_pass          https://vault-module:8200/ui/;
            proxy_set_header    Host              $host;
            proxy_ssl_server_name on;
            proxy_ssl_verify    off;
        }

        # 5) All other paths → upstream from the map
        location / {
            proxy_pass          http://$upstream$request_uri;
            proxy_set_header    Host               $host;
            proxy_set_header    X-Real-IP          $remote_addr;
            proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
        }
    }
}
