worker_processes 1;
events { worker_connections 1024; }

http {

    resolver 127.0.0.11 valid=300s;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    map $host $backend {
        hostnames;
        vault.*                     vault;
        grafana.*                   grafana;
        prometheus.*                prometheus;
        default                     frontend;
    }

    map $host $api_backend {
        hostnames;

        transcendance.charles-poulain.ovh   gateway;
        default                             $backend;
    }

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;


    upstream vault {
        zone vault 64k;
        server vault-module:8200 resolve;
    }

    upstream grafana {
        zone grafana 64k;
        server grafana-module:3000 resolve;
    }

    upstream prometheus {
        zone prometheus 64k;
        server prometheus-module:9090 resolve;
    }

    upstream gateway {
        zone gateway 64k;
        server gateway-service:3000 resolve;
    }

    upstream frontend {
        zone frontend 64k;
        server frontend:80 resolve;
    }

    server {
        listen       80;
        server_name  transcendance.charles-poulain.ovh
                     *.transcendance.charles-poulain.ovh;

        if ($host ~ ^vault\.) {
            rewrite ^/$ /ui/ redirect;
        }
        location /ui/ {
            proxy_pass          https://vault-module:8200/ui/;
            proxy_set_header    Host              $host;
            proxy_ssl_server_name on;
            proxy_ssl_verify    off;
        }

        location ^~ /v1/ {
            proxy_pass https://vault-module:8200$request_uri;
            proxy_set_header Host $host;
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
        }

        location ^~ /api/ {
            rewrite ^/api/(.*)$ /$1 break;

            proxy_pass http://$api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			add_header Cache-Control "no-store";
        }

        location / {
            proxy_pass          http://$backend$request_uri;
            proxy_set_header    Host            $host;
            proxy_set_header    X-Real-IP       $remote_addr;
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
